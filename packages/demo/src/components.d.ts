/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import { JSX } from '@stencil/core';
import {
  Recipient,
} from './utils/data-tunnel';


export namespace Components {
  interface DemoApp {}
  interface DemoCreateMessage {
    'getReceiverList': () => Promise<Recipient[]>;
    'sendMessage': (msg: string, recipients: Recipient[]) => Promise<void>;
    'setCreatingMessage': (createMessage: boolean) => void;
  }
  interface DemoMessageLog {}
}

declare namespace LocalJSX {
  interface DemoApp extends JSXBase.HTMLAttributes {}
  interface DemoCreateMessage extends JSXBase.HTMLAttributes {
    'getReceiverList'?: () => Promise<Recipient[]>;
    'sendMessage'?: (msg: string, recipients: Recipient[]) => Promise<void>;
    'setCreatingMessage'?: (createMessage: boolean) => void;
  }
  interface DemoMessageLog extends JSXBase.HTMLAttributes {}

  interface IntrinsicElements {
    'demo-app': DemoApp;
    'demo-create-message': DemoCreateMessage;
    'demo-message-log': DemoMessageLog;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


declare global {



  interface HTMLDemoAppElement extends Components.DemoApp, HTMLStencilElement {}
  var HTMLDemoAppElement: {
    prototype: HTMLDemoAppElement;
    new (): HTMLDemoAppElement;
  };

  interface HTMLDemoCreateMessageElement extends Components.DemoCreateMessage, HTMLStencilElement {}
  var HTMLDemoCreateMessageElement: {
    prototype: HTMLDemoCreateMessageElement;
    new (): HTMLDemoCreateMessageElement;
  };

  interface HTMLDemoMessageLogElement extends Components.DemoMessageLog, HTMLStencilElement {}
  var HTMLDemoMessageLogElement: {
    prototype: HTMLDemoMessageLogElement;
    new (): HTMLDemoMessageLogElement;
  };

  interface HTMLElementTagNameMap {
    'demo-app': HTMLDemoAppElement;
    'demo-create-message': HTMLDemoCreateMessageElement;
    'demo-message-log': HTMLDemoMessageLogElement;
  }

  interface ElementTagNameMap extends HTMLElementTagNameMap {}
}

