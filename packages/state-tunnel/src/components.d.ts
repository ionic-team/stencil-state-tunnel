/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import '@stencil/core';


import {
  SubscribeCallback,
} from './declarations';


export namespace Components {

  interface ContextConsumer {
    'context': { [key: string]: any };
    'renderer': Function;
    'subscribe'?: SubscribeCallback<string>;
  }
  interface ContextConsumerAttributes extends StencilHTMLAttributes {
    'context'?: { [key: string]: any };
    'renderer'?: Function;
    'subscribe'?: SubscribeCallback<string>;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ContextConsumer': Components.ContextConsumer;
  }

  interface StencilIntrinsicElements {
    'context-consumer': Components.ContextConsumerAttributes;
  }


  interface HTMLContextConsumerElement extends Components.ContextConsumer, HTMLStencilElement {}
  var HTMLContextConsumerElement: {
    prototype: HTMLContextConsumerElement;
    new (): HTMLContextConsumerElement;
  };

  interface HTMLElementTagNameMap {
    'context-consumer': HTMLContextConsumerElement
  }

  interface ElementTagNameMap {
    'context-consumer': HTMLContextConsumerElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
